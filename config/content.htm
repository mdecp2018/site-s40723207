<h1>簡介</h1>
<p>2018 Fall 計算機程式與電腦輔助設計實習課程分組網站</p>
<p>所在組別:<a href="https://mdecp2018.github.io/finalproject-bg3/content/index.html">finalproject-bg3</a></p>
<p>分組個人報告</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7Nk2X4L0d7Y" width="560"></iframe></p>
<p></p>
<p></p><h2>CMSimfly 網站</h2>
<p>各組必須自行更改 Config 中的網站標題, 且每次完成近端動態網頁編輯後, 以 generate_pages 按鈕, 將動態網頁資料轉為靜態網頁資料, 之後再新增、提交並推送到遠端倉儲.</p>
<p>github網站:https://github.com/chiamingyen/cmsimfly</p>
<h2>reveal 投影片</h2>
<p>https://mdecp2018.github.io/site-s40723207/reveal/#/</p>
<h2>pelican 網誌</h2>
<p>以 <a href="http://www.leoeditor.com/">Leo Editor</a> 開啟 config/pelican.leo </p>
<p>各分組必須自行更改 @edit pelicanconf.py 中的 AUTHOR 與 SITENAME</p>
<p>更改 @edit publishconf.py 中的 SITEURL</p>
<p></p>
<h1>操作影片</h1>
<p>每週各分組組員必須將參與分組協同過程之電腦操作流程錄成影片後, 上傳至各自的 Youtube 帳號區, 並嵌入各分組網站頁面中.</p>
<p><img src="https://scontent.ftpe5-1.fna.fbcdn.net/v/t34.18173-12/27152856_2015301408750832_936665114_n.png?_nc_cat=110&amp;_nc_ht=scontent.ftpe5-1.fna&amp;oh=ed4eb6ecaaf04b9211180fea236b91c5&amp;oe=5BC799D7"/></p><h2>Week1</h2>
<p><span>國立虎尾科技大學機械設計工程系計算機程式 -四設 一乙第一週操作如何進入近端，修改標題，轉化成進態網站，並上傳至遠端倉儲。</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/jxI1qLLf5jg" width="560"></iframe><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/vdESjSu8SgE" width="560"></iframe></p>
<h2>Week2</h2>
<p>git 基本操作 練習 轉換版本</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9Ij8CvPttNE" width="560"></iframe></p>
<h2>Week3</h2>
<p>如何上傳影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HkCQ_ULOQUM" width="560"></iframe></p>
<h2>Week4</h2>
<p>修改網誌標題:利用google chrome檢視程式碼的功能 找出標題的程式碼 並修改</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/q5TDiSlCP5E" width="560"></iframe></p>
<h2>Week5</h2>
<p>修改網址背景圖片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rr4CdTd_1gM" width="560"></iframe></p>
<h2>Week6</h2>
<p>修改網戰背景</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/edi724SR9mw" width="560"></iframe></p>
<h2>Week7</h2>
<p>修改網站大標顏色以及背景</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/P1ebvwKc9UU" width="560"></iframe></p>
<h2>Week8</h2>
<p>運用git remote add新增gitlab為新的倉儲</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/3KvcxsMkSLU" width="560"></iframe></p>
<p></p>
<h1>Python 手冊</h1>
<p>計算機程式教材:  <a href="http://mde.tw/cp2018/content/">http://mde.tw/cp2018/content/</a> </p>
<p>可攜程式下載: <a href="https://drive.google.com/file/d/1DWtyoUhl8CycKJ8uulB3viRXE39KqpE1/view?usp=sharing">p37.7z</a></p>
<h2>EX</h2>
<p>將python教材的4個示範程式碼讀懂並加以解釋、熟練</p>
<p></p>
<h3>EX1</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 導入 Ex1 原始碼
a = 0
def my_print(n, input_str):  #定義my_print函數式
    print("以下將重覆列印 '", input_str + "' " + str(n) + "次")
    for i in range(n):   #n的迴圈,會從0到n-1
        print(i, input_str)
 
my_print(5, "Hello World!") #映出5次的Hello World
the_str = "開始學習 Python" 
num = input("請輸入要列印的次數!") #輸入即便為num
my_print(int(num), the_str) #用my_print函數式,映出num次的開始學習 Python
a = a + 1   #=是代入的意思,第二列說明a是0,a=a+1後a的值會變成0+1,
print("(" + str(a) + ")", "_" * 25)
 
def myfun(): 
    yield 1  #將myfun添加1~3
    yield 2
    yield 3
 
for i in myfun(): #
    print(i)
 
x = iter(myfun()) #列出myfun的物件,列完一個換行
y = list(myfun()) #list列出myfun的所有物件

a = a + 1 #a又再次加1,變為2
print("(" + str(a) + ")", "_" * 25)
print(x.__next__()) #列出myfun的第一件
print(x.__next__()) #列出myfun的下一件
print(x.__next__())
print(y)
</pre>
<h3>EX2</h3>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false"># Python 的內建資料型別
import math
def f():
    print("This is a user-defined function")
    return 42

print("Some basic types in Python:")
print(type(2))           # int
print(type(2.2))         # float
print(type("2.2"))       # str  (string)
print(type(2 &lt; 2.2))     # bool (boolean)
print(type(math))        # module
print(type(math.tan))    # builtin_function_or_method ("function" in Brython)
print(type(f))           # function (user-defined function)
print(type(type(42)))    # type

print("#####################################################")

print("And some other types we will see later in the course...")
print(type(Exception())) # Exception
print(type(range(5)))    # range
print(type([1,2,3]))     # list
print(type((1,2,3)))     # tuple
print(type({1,2}))       # set
print(type({1:42}))      # dict (dictionary or map)
print(type(2+3j))        # complex  (complex number) (we may not see this type)
</pre>
<p><br/>int :數值 整數<br/>float :浮點數 有小數點的數值<br/>str :字串 以""包住<br/>bool :布林值 通常為真 假<br/>module :模組<br/>function :函式<br/>Exception :<br/>range :函数<br/>list :清單 []<br/>tuple :小括號 ()<br/>set :大括號 與數學中集合的概念類似 無順序<br/>dict :字典 可變容器模型 可存任意類型對象<br/>complex :複數<br/><br/></p>
<p></p>
<h2>1-1</h2>
<p>def :定義一個東西</p>
<p><span style="font-weight: 400;">print() 映出這個東西 用法 print(‘hello world’)</span></p>
<p><span style="font-weight: 400;">type 資料的型態 </span></p>
<p><span style="font-weight: 400;">用法: a = 123 </span></p>
<p><span style="font-weight: 400;">               type(a)</span></p>
<p><span style="font-weight: 400;">結果顯示 init</span></p>
<p><span style="font-weight: 400;">   init  整數</span></p>
<p><span style="font-weight: 400;">   str  字串 </span></p>
<p><span style="font-weight: 400;">   float 浮點數</span></p>
<p><span style="font-weight: 400;">(字串不能直接跟數值相加)</span></p>
<p><span style="font-weight: 400;"><img alt="" height="479" src="/images/bandicam 2018-10-14 01-14-01-299.jpg" width="597"/></span></p>
<p><span style="font-weight: 400;">練習:</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">a = 0
b = 234
c = '123'
print(type(a)) #顯示a的型態
print(a+b) #顯示a+b
#數值與字串相加 需經過轉換
print(a+int(c)) 
print(str(b)+c)#字串相加結果
</pre>
<p>if-else用法</p>
<p><span>&gt; 大於</span></p>
<p><span>&lt; 小於</span></p>
<p><span>&gt;= 大於等於</span></p>
<p><span>&lt;= 小於等於</span></p>
<p><span>== 等於</span></p>
<p><span>!== 不等於</span></p>
<p><span></span></p>
<p><span></span><span>true 真的</span></p>
<p><span>false 假的</span></p>
<p><span>and 且</span></p>
<p><span>or 或</span></p>
<p><span>not 非</span></p>
<p><span>練習</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">hp = 80 #生命值80
if hp &gt; 60: #hp大於60時
   print('繼續冒險')
elif hp &lt; 40: #hp小於40時
   print('回家補給')
else: #hp介於60~40之間 #不可放條件
   print('打打小怪就好')</pre>
<p>for X in range(a,b) 迴圈  X的迴圈為a到b-1   </p>
<p>for X in range(b) 從頭到b-1</p>
<p>練習</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"> for X in range(1,10) : #X迴圈1~9
    for Y in range(1,10) : #Y迴圈1~9 
       print(X*Y,end=' ') #end=' '結束時空格
    print(end='\n') #自動換下行
  
</pre>
<h2>1-2</h2>
<p>A = [ , , ]  : llist  列表 </p>
<p>list = [start:end] print(list)回列出start+1~end</p>
<p><span><span class="_7xn">  list.append(x)</span>: 把變數x塞到list的最後面</span></p>
<p><span><span class="_7xn">  list.insert(i, x)</span>: 把變數x塞到i這個位置上</span></p>
<p><span><span class="_7xn">  list.pop()</span>: 把list的最後一格丟掉</span></p>
<p><span><span class="_7xn">  list.pop(i)</span>: 把list的第i格丟掉</span></p>
<p><span><span class="_7xn">  list.remove(x)</span>: 會把第一個出現的變數x拿掉</span></p>
<p><span><span class="_7xn">  list.clear()</span>: 清除list的資料</span></p>
<p><span></span><span><span class="_7xn">  list[start: end]</span>，<span class="_7xn">start</span>和<span class="_7xn">end</span>都可以省略不寫</span></p>
<p><span><span class="_7xn">   start</span>的預設為0</span></p>
<p><span><span class="_7xn">   end</span>的預設為<span class="_7xn">len(list)</span></span></p>
<p><span><span class="_7xn">   liest[ :end]</span>代表 0~end-1</span></p>
<p><span><span class="_7xn">   list[start: ]</span>代表start~len(list)-1</span></p>
<p><span><span class="_7xn">   list[ : ]</span>代表0~len(list)-1</span></p>
<p>  len()計算list的長度</p>
<p>  sum()計算list中的int總和</p>
<p>練習:</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">scores=[]
for i in range(0,10):
    i = int(input('輸入數字: '))
    scores.append(i)
print(scores)
print(end='\n')
    
for q in range(0,3):
    a = int(input('輸入起始: '))
    b = int(input('輸入結束: '))
    print('總和: ', sum(scores[a:b]))
    print(end='\n')</pre>
<p>return 回傳</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def worker( a, b, c ):  #定義worker的形式
    a = a + 1  
    x = a + b
    y = x * c
    return y    #將Y回送至worker,worker的數值等於Y
    z = x / y   #return以後不會運行
print (worker(1,2,3))
#結果為12
</pre>
<p></p>
<h1>分組專案</h1>
<p>在整組的分工中我負責的部分有:</p>
<p>week15pdf 與影片 電腦硬體 電腦系統 pdf finalreport.pdf reavel 前段製作 leo 分組協同報告</p><h2>每周心得</h2>
<p>Week9</p>
<p>　　這禮拜是期中考周，老師讓我們自己打自己的分數，讓自己的評量自己的成果。</p>
<p>Week10</p>
<p>　　這禮拜我們運用更新完的P37新增一個eric6的程式，裡面可以運用很多不同的零件去組合成一個程式，並且很簡單就可以運行，還可以修改運行的程式碼，可以創造出很多很有趣的東西，感覺非常有趣，很值得學習。</p>
<p>Week11</p>
<p>        這個禮拜我們開始要使用heroku，將可攜式的heroku程式放入p37裡，更新一下start.bat，重開後邊可以使用heroku的指令了。雖然感覺跟git原本的指令差不多，不過還是得記下來。</p>
<p>Week12</p>
<p>       這禮拜終於要開始使用heroku了，一開始所有人要創一個heroku的帳號，再由組長創立跟github同步的倉儲，所以一開始沒什麼事情，創好後原本打算使用heroku的線上修改系統，但是無法使用，有點小可惜，只能把它當作備用的倉儲。</p>
<p>Week13</p>
<p>　　這個禮拜一開始先介紹了leo-editor的基本操作，之後老師介紹了一個由brython寫的小遊戲，教我們如何用簡單的變動，讓程式改變，我們目前只有學一些簡單的python語法，如果要大改變，勢必要花很多時間。</p>
<p>Week14</p>
<p>　　這次也是leo-editor的應用，如何在登入系統輸入特定文字時，跑出所想的結果，雖然之前已經看過if判斷式的運用，但是要我們這些沒底子的直接就變新增條件，還是有點難，看了結果後發現，新增的程式碼與一開始想的大有不同，得好好學習。</p>
<p>Week15</p>
<p>　　由於將近期末了，開始要準備各組的報告，我負責把這周的東西做成報告pdf，老師開始教如何leo-editor讓組員協同編輯報告，由於這程式已經是寫好的狀態，我們只需把他從倉儲抓下來即可使用，將bgx的report資料夾抓進各組的倉儲內，讓組員便可分開時間編輯，最後要輸出時，要將installation底下的東西安裝好，變可輸出成1整個的PDF黨。除此之外後面還講了有關如何用brython在網站上建立程式，除了要自己導入brython的檔案，也要熟知那些檔案的用處。</p>
<p>Week16</p>
<p>　　<span>這禮拜老師交代了期末的所有作業，不但自己要有個人報告，還要分組報告，個人報告要自己做影片評量，第一次對著電腦講心得，感覺有點彆扭。團體的報告還想台詞，要努力想。</span></p>
<p>Week17</p>
<p><span>　　由於原先的課被放掉，於使變成了3的補課，在晚上的時間讓學長教python的語法，這些都是很常見的語法，要熟記。</span></p><h2>分組報告</h2>
<p>個人做的報告:</p>
<p><a href="/downloads/Week15-converted.pdf">Week15</a></p>
<p><a href="/downloads/電腦硬體-converted.pdf">電腦硬體</a></p>
<p><a href="/downloads/系統-converted.pdf">操作系統</a></p>
<h2>finalreport</h2>
<p>我負責把整組協同做的報告整理成一個最終的report:</p>
<p><a href="/downloads/finalreport.pdf">report</a></p>
<p>期末的報告影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/7Nk2X4L0d7Y?feature=youtu" width="560"></iframe></p><h1>OnShape 手冊</h1>
<p><a href="https://www.onshape.com/">https://www.onshape.com/</a> </p>
<p>電腦輔助設計實習課程教材: <a href="http://mde.tw/cadp2018/content/">http://mde.tw/cadp2018/content/</a> </p>
<h1>Fusion 360</h1>
<p><a href="https://www.autodesk.com/products/fusion-360/students-teachers-educators">https://www.autodesk.com/products/fusion-360/students-teachers-educators</a> </p>